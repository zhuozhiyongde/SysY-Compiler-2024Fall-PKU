decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()

global @x_0 = alloc i32, zeroinit
global @y_0 = alloc i32, zeroinit

fun @t(): i32 {
%t_entry:
	%0 = load @x_0
	%1 = add %0, 1
	store %1, @x_0
	ret 1
%jump_0:
	ret 0
}

fun @f(): i32 {
%f_entry:
	%2 = load @y_0
	%3 = add %2, 1
	store %3, @y_0
	ret 0
%jump_1:
	ret 0
}

fun @main(): i32 {
%main_entry:
	@sum_2 = alloc i32
	store 0, @sum_2
	%4 = load @sum_2
	%5 = call @f()
	%short_result_0 = alloc i32
	br %5, %short_true_0, %short_false_0
%short_true_0:
	store 1, %short_result_0
	jump %short_end_0
%short_false_0:
	%6 = call @f()
	%7 = or %6, 0
	%8 = ne %7, 0
	store %8, %short_result_0
	jump %short_end_0
%short_end_0:
	%9 = load %short_result_0
	%10 = add %4, %9
	store %10, @sum_2
	%11 = load @sum_2
	%12 = call @f()
	%short_result_1 = alloc i32
	br %12, %short_true_1, %short_false_1
%short_true_1:
	store 1, %short_result_1
	jump %short_end_1
%short_false_1:
	%13 = call @t()
	%14 = or %13, 0
	%15 = ne %14, 0
	store %15, %short_result_1
	jump %short_end_1
%short_end_1:
	%16 = load %short_result_1
	%17 = add %11, %16
	store %17, @sum_2
	%18 = load @sum_2
	%19 = call @t()
	%short_result_2 = alloc i32
	br %19, %short_true_2, %short_false_2
%short_true_2:
	store 1, %short_result_2
	jump %short_end_2
%short_false_2:
	%20 = call @f()
	%21 = or %20, 0
	%22 = ne %21, 0
	store %22, %short_result_2
	jump %short_end_2
%short_end_2:
	%23 = load %short_result_2
	%24 = add %18, %23
	store %24, @sum_2
	%25 = load @sum_2
	%26 = call @t()
	%short_result_3 = alloc i32
	br %26, %short_true_3, %short_false_3
%short_true_3:
	store 1, %short_result_3
	jump %short_end_3
%short_false_3:
	%27 = call @t()
	%28 = or %27, 0
	%29 = ne %28, 0
	store %29, %short_result_3
	jump %short_end_3
%short_end_3:
	%30 = load %short_result_3
	%31 = add %25, %30
	store %31, @sum_2
	%32 = load @sum_2
	%33 = call @f()
	%short_result_4 = alloc i32
	br %33, %short_true_4, %short_false_4
%short_false_4:
	store 0, %short_result_4
	jump %short_end_4
%short_true_4:
	%34 = call @f()
	%35 = ne %33, 0
	%36 = ne %34, 0
	%37 = and %35, %36
	store %37, %short_result_4
	jump %short_end_4
%short_end_4:
	%38 = load %short_result_4
	%39 = add %32, %38
	store %39, @sum_2
	%40 = load @sum_2
	%41 = call @f()
	%short_result_5 = alloc i32
	br %41, %short_true_5, %short_false_5
%short_false_5:
	store 0, %short_result_5
	jump %short_end_5
%short_true_5:
	%42 = call @t()
	%43 = ne %41, 0
	%44 = ne %42, 0
	%45 = and %43, %44
	store %45, %short_result_5
	jump %short_end_5
%short_end_5:
	%46 = load %short_result_5
	%47 = add %40, %46
	store %47, @sum_2
	%48 = load @sum_2
	%49 = call @t()
	%short_result_6 = alloc i32
	br %49, %short_true_6, %short_false_6
%short_false_6:
	store 0, %short_result_6
	jump %short_end_6
%short_true_6:
	%50 = call @f()
	%51 = ne %49, 0
	%52 = ne %50, 0
	%53 = and %51, %52
	store %53, %short_result_6
	jump %short_end_6
%short_end_6:
	%54 = load %short_result_6
	%55 = add %48, %54
	store %55, @sum_2
	%56 = load @sum_2
	%57 = call @t()
	%short_result_7 = alloc i32
	br %57, %short_true_7, %short_false_7
%short_false_7:
	store 0, %short_result_7
	jump %short_end_7
%short_true_7:
	%58 = call @t()
	%59 = ne %57, 0
	%60 = ne %58, 0
	%61 = and %59, %60
	store %61, %short_result_7
	jump %short_end_7
%short_end_7:
	%62 = load %short_result_7
	%63 = add %56, %62
	store %63, @sum_2
	%64 = call @t()
	%short_result_8 = alloc i32
	br %64, %short_true_8, %short_false_8
%short_true_8:
	store 1, %short_result_8
	jump %short_end_8
%short_false_8:
	%65 = call @t()
	%short_result_9 = alloc i32
	br %65, %short_true_9, %short_false_9
%short_false_9:
	store 0, %short_result_9
	jump %short_end_9
%short_true_9:
	%66 = call @t()
	%67 = ne %65, 0
	%68 = ne %66, 0
	%69 = and %67, %68
	store %69, %short_result_9
	jump %short_end_9
%short_end_9:
	%70 = load %short_result_9
	%71 = or %70, 0
	%72 = ne %71, 0
	store %72, %short_result_8
	jump %short_end_8
%short_end_8:
	%73 = load %short_result_8
	%74 = call @f()
	%short_result_10 = alloc i32
	br %74, %short_true_10, %short_false_10
%short_true_10:
	store 1, %short_result_10
	jump %short_end_10
%short_false_10:
	%75 = call @t()
	%short_result_11 = alloc i32
	br %75, %short_true_11, %short_false_11
%short_false_11:
	store 0, %short_result_11
	jump %short_end_11
%short_true_11:
	%76 = call @t()
	%77 = ne %75, 0
	%78 = ne %76, 0
	%79 = and %77, %78
	store %79, %short_result_11
	jump %short_end_11
%short_end_11:
	%80 = load %short_result_11
	%81 = or %80, 0
	%82 = ne %81, 0
	store %82, %short_result_10
	jump %short_end_10
%short_end_10:
	%83 = load %short_result_10
	%84 = call @f()
	%short_result_12 = alloc i32
	br %84, %short_true_12, %short_false_12
%short_true_12:
	store 1, %short_result_12
	jump %short_end_12
%short_false_12:
	%85 = call @f()
	%short_result_13 = alloc i32
	br %85, %short_true_13, %short_false_13
%short_false_13:
	store 0, %short_result_13
	jump %short_end_13
%short_true_13:
	%86 = call @t()
	%87 = ne %85, 0
	%88 = ne %86, 0
	%89 = and %87, %88
	store %89, %short_result_13
	jump %short_end_13
%short_end_13:
	%90 = load %short_result_13
	%91 = or %90, 0
	%92 = ne %91, 0
	store %92, %short_result_12
	jump %short_end_12
%short_end_12:
	%93 = load %short_result_12
	%94 = call @t()
	%short_result_14 = alloc i32
	br %94, %short_true_14, %short_false_14
%short_false_14:
	store 0, %short_result_14
	jump %short_end_14
%short_true_14:
	%95 = call @t()
	%96 = ne %94, 0
	%97 = ne %95, 0
	%98 = and %96, %97
	store %98, %short_result_14
	jump %short_end_14
%short_end_14:
	%99 = load %short_result_14
	%short_result_15 = alloc i32
	br %99, %short_true_15, %short_false_15
%short_true_15:
	store 1, %short_result_15
	jump %short_end_15
%short_false_15:
	%100 = call @t()
	%101 = or %100, 0
	%102 = ne %101, 0
	store %102, %short_result_15
	jump %short_end_15
%short_end_15:
	%103 = load %short_result_15
	%104 = call @f()
	%short_result_16 = alloc i32
	br %104, %short_true_16, %short_false_16
%short_false_16:
	store 0, %short_result_16
	jump %short_end_16
%short_true_16:
	%105 = call @t()
	%106 = ne %104, 0
	%107 = ne %105, 0
	%108 = and %106, %107
	store %108, %short_result_16
	jump %short_end_16
%short_end_16:
	%109 = load %short_result_16
	%short_result_17 = alloc i32
	br %109, %short_true_17, %short_false_17
%short_true_17:
	store 1, %short_result_17
	jump %short_end_17
%short_false_17:
	%110 = call @t()
	%111 = or %110, 0
	%112 = ne %111, 0
	store %112, %short_result_17
	jump %short_end_17
%short_end_17:
	%113 = load %short_result_17
	%114 = call @f()
	%short_result_18 = alloc i32
	br %114, %short_true_18, %short_false_18
%short_false_18:
	store 0, %short_result_18
	jump %short_end_18
%short_true_18:
	%115 = call @f()
	%116 = ne %114, 0
	%117 = ne %115, 0
	%118 = and %116, %117
	store %118, %short_result_18
	jump %short_end_18
%short_end_18:
	%119 = load %short_result_18
	%short_result_19 = alloc i32
	br %119, %short_true_19, %short_false_19
%short_true_19:
	store 1, %short_result_19
	jump %short_end_19
%short_false_19:
	%120 = call @f()
	%121 = or %120, 0
	%122 = ne %121, 0
	store %122, %short_result_19
	jump %short_end_19
%short_end_19:
	%123 = load %short_result_19
	%124 = load @x_0
	call @putint(%124)
	call @putch(32)
	%125 = load @y_0
	call @putint(%125)
	call @putch(10)
	%126 = load @sum_2
	ret %126
%jump_2:
	ret 0
}
